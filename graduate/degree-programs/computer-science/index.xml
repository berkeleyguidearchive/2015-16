<?xml version="1.0"?>
<courseleaf>



<text>
<![CDATA[  

  
]]>
</text>
<abouttheprogramtext>
<![CDATA[
<p>The Department of Electrical Engineering and Computer Sciences (EECS) offers two graduate programs in Computer Science: the Master of Science (MS), and the Doctor of Philosophy (PhD).</p>
<h3>Master of Science (MS)</h3>
<p>The Master of Science (MS) emphasizes research preparation and experience and, for most students, is a chance to lay the groundwork for pursuing a PhD.</p>
<h3>Doctor of Philosophy (PhD)</h3>
<p>The Berkeley PhD in EECS combines coursework and original research with some of the finest EECS faculty in the US preparing for careers in academia or industry. Our <a href="http://www.eecs.berkeley.edu/alumni/distinguished.shtml" target="_blank">alumni</a>
 have gone on to hold amazing positions around the world.</p>

]]>
</abouttheprogramtext>
<admissionstext>
<![CDATA[
<h3>Admission to the University</h3>
 <h4>Minimum Requirements for Admission</h4> <p>The following minimum requirements apply to all graduate programs and will be verified by the Graduate Division:</p> <ol> 	<li>A bachelor’s degree or recognized equivalent from an accredited institution;</li> 	<li>A grade point average of B or better (3.0);</li> 	<li>If the applicant comes from a country or political entity (e.g., Quebec) where English is not the official language, adequate proficiency in English to do graduate work, as evidenced by a TOEFL score of at least 90 on the iBT test, 570 on the paper-and-pencil test, 230 on the computer-based test, or an IELTS Band score of at least 7 (note that individual programs may set higher levels for any of these); and</li> 	<li>Sufficient undergraduate training to do graduate work in the given field.</li> </ol> <h4>Applicants Who Already Hold a Graduate Degree</h4> <p>The Graduate Council views academic degrees not as vocational training certificates but as evidence of broad training in research methods, independent study, and articulation of learning. Therefore, applicants who already have academic graduate degrees should be able to pursue new subject matter at an advanced level without need to enroll in a related or similar graduate program.</p> <p>Programs may consider students for an additional academic master’s or professional master’s degree only if the additional degree is in a distinctly different field.</p> <p>Applicants admitted to a doctoral program that requires a master’s degree to be earned at Berkeley as a prerequisite (even though the applicant already has a master’s degree from another institution in the same or a closely allied field of study) will be permitted to undertake the second master’s degree, despite the overlap in field.</p> <p>The Graduate Division will admit students for a second doctoral degree only if they meet the following guidelines:</p> <ol> 	<li>Applicants with doctoral degrees may be admitted for an additional doctoral degree only if that degree program is in a general area of knowledge distinctly different from the field in which they earned their original degree. For example, a physics PhD could be admitted to a doctoral degree program in music or history; however, a student with a doctoral degree in mathematics would not be permitted to add a PhD in statistics.</li> 	<li>Applicants who hold the PhD degree may be admitted to a professional doctorate or professional master’s degree program if there is no duplication of training involved.</li> </ol> <p>Applicants may apply only to one single degree program or one concurrent degree program per admission cycle.</p> <p>Any applicant who was previously registered at Berkeley as a graduate student, no matter how briefly, must apply for readmission, not admission, even if the new application is to a different program.</p> <h4>Required Documents for Applications</h4> <ol> 	<li><strong>Transcripts:  </strong>Applicants may u<span>pload <em>unofficial </em>transcripts with your application for the departmental initial review. <em>If the applicant is admitted,</em> then <em>official </em>transcripts of all college-level work will be required. Admitted applicants must r</span>equest a current transcript from every post-secondary school attended, including community colleges, summer sessions, and extension programs. <span>Official transcripts must be in sealed envelopes as issued by the school(s) attended. </span> 	<div class="gmail_default">If you have attended Berkeley, upload your unofficial transcript with your application for the departmental initial review. <em>If you are admitted,</em> an official transcript with evidence of degree conferral <em>will not</em> be required.</div> 	</li> 	<li><strong>Letters of recommendation:</strong> Applicants may request online letters of recommendation through the online application system. Hard copies of recommendation letters must be sent directly to the program, not the Graduate Division.</li> 	<li><strong>Evidence of English language proficiency:</strong> All applicants from countries or political entities in which the official language is not English are required to submit official evidence of English language proficiency. This applies to applicants from Bangladesh, Burma, Nepal, India, Pakistan, Latin America, the Middle East, the People’s Republic of China, Taiwan, Japan, Korea, Southeast Asia, most European countries, and Quebec (Canada). However, applicants who, at the time of application, have already completed at least one year of full-time academic course work with grades of B or better at a US university may submit an official transcript from the US university to fulfill this requirement. The following courses will not fulfill this requirement: 1) courses in English as a Second Language, 2) courses conducted in a language other than English, 3) courses that will be completed after the application is submitted, and 4) courses of a non-academic nature. If applicants have previously been denied admission to Berkeley on the basis of their English language proficiency, they must submit new test scores that meet the current minimum from one of the standardized tests.</li> </ol> <h4>Where to Apply</h4> <p>Visit the Berkeley Graduate Division <a href="http://grad.berkeley.edu/admissions/apply/" target="_blank">application page</a> . </p> 
<h3>Admission to the Program</h3>
<p>The following items are required for admission to the Berkeley EECS MS/PhD program in addition to the University’s general graduate admissions requirements:</p>
<ol>
	<li><strong>GRE Scores:</strong> All three sections of the GRE are required. Send your scores electronically to Institution Code 4833. (Scores must be from the last five years.)</li>
	<li><strong>Statement of Purpose:</strong> Why are you applying for this program? What will you do during this degree program? What do you want to do after and how will this help you?</li>
	<li><strong>Personal History Statement:</strong> What from your past made you decide to go into this field? And how will your personal history help you succeed in this program and your future goals?</li>
	<li><strong>GPA:</strong> If you attended a university outside of the USA, please leave the GPA section blank.</li>
	<li><strong>Resume:</strong> Please also include a full resume/CV listing your experience and education.</li>
</ol>
<p>Complete the online UC Berkeley graduate application:</p>
<ol>
	<li>Start your application through this <a href="http://www.grad.berkeley.edu/" target="_blank">link</a>
, and fill in each relevant page.</li>

	<li>Upload the materials above, and send the recommender links several weeks prior to the application deadline, to give your recommenders time to submit their letters.</li>
</ol>

]]>
</admissionstext>
<doctoraldegreerequirementstext>
<![CDATA[
<h3>Normative Time Requirements</h3>
<p>Normative time in the EECS department is between 5.5-6 years for the doctoral program.</p>
<h3>Time to Advancement</h3>
<h4>Curriculum</h4>
<p>The faculty of the College of Engineering recommends a minimum number of courses taken while in graduate standing. The total minimum is 24 units of coursework, taken for a letter grade and not including 298, 299, 301, and 602. Students entering prior to fall 2009 have the option of completing 32 units of coursework with a reduced teaching requirement.</p>
<table class="sc_courselist" width="100%"><colgroup><col class="codecol" /><col class="titlecol" /><col align="char" char="." class="hourscol" /></colgroup><tbody><tr class="even firstrow"><td colspan="2"><span class="courselistcomment">12 units from one major field within EECS, with a 3.5 grade point average</span></td><td class="hourscol">12</td></tr>
<tr class="odd"><td colspan="2"><span class="courselistcomment">6 units from one minor field within EECS, with a 3.0 grade point average</span></td><td class="hourscol">6</td></tr>
<tr class="even"><td colspan="2"><span class="courselistcomment">6 units from one minor field outside EECS, with a 3.0 grade point average</span></td><td class="hourscol">6</td></tr>
<tr class="odd lastrow"><td class="codecol">COMPSCI&#160;375</td><td>Teaching Techniques for Computer Science</td><td class="hourscol">2</td></tr>
</tbody></table>

<h4>Preliminary Exams</h4>
<p>The EECS preliminary requirement consists of two components.</p>
<p><strong>Oral Examination</strong><br/>
The oral exam serves an advisory role in a student's graduate studies program, giving official feedback from the exam committee of faculty members. Students must be able to demonstrate an integrated grasp of the exam area's body of knowledge in an unstructured framework. Students must pass the oral portion of the preliminary exam within their first two attempts. A third attempt is possible with a petition of support from the student's faculty adviser and final approval by the prelim committee chair. Failure to pass the oral portion of the preliminary exam will result in the student being ineligible to complete the PhD program. The examining committee awards a score in the range of 0-10. The minimum passing score is 6.0.</p>
<p><strong>Breadth Courses</strong><br/>
The breadth courses ensure that students have an exposure to areas outside of their concentration. It is expected that students achieve high academic standards in these courses.</p>
<p>CS students must complete courses from three of the following areas, passing each with at least a B+. One course must be selected from the Theory, AI, or Graphics/HCI group; and one course must be selected from the Programming, Systems, or Architecture/VLSI group<sup>1</sup>.</p>
<table class="sc_courselist" width="100%"><colgroup><col class="codecol" /><col class="titlecol" /><col align="char" char="." class="hourscol" /></colgroup><tbody><tr class="even areaheader firstrow"><td colspan="2"><span class="courselistcomment areaheader">Theory</span></td><td class="hourscol"></td></tr>
<tr class="odd"><td class="codecol">COMPSCI&#160;270</td><td>Combinatorial Algorithms and Data Structures</td><td class="hourscol">3</td></tr>
<tr class="even"><td class="codecol">COMPSCI&#160;271</td><td>Randomness and Computation</td><td class="hourscol">3</td></tr>
<tr class="odd"><td class="codecol">COMPSCI&#160;273</td><td>Foundations of Parallel Computation</td><td class="hourscol">3</td></tr>
<tr class="even"><td class="codecol">COMPSCI&#160;274</td><td>Computational Geometry</td><td class="hourscol">3</td></tr>
<tr class="odd"><td class="codecol">COMPSCI&#160;276</td><td>Cryptography</td><td class="hourscol">3</td></tr>
<tr class="even areaheader"><td colspan="2"><span class="courselistcomment areaheader">AI</span></td><td class="hourscol"></td></tr>
<tr class="odd"><td class="codecol">COMPSCI&#160;C280</td><td>Computer Vision</td><td class="hourscol">3</td></tr>
<tr class="even"><td class="codecol">COMPSCI&#160;C281A</td><td>Statistical Learning Theory</td><td class="hourscol">3</td></tr>
<tr class="odd"><td class="codecol">COMPSCI&#160;C281B</td><td>Advanced Topics in Learning and Decision Making</td><td class="hourscol">3</td></tr>
<tr class="even"><td class="codecol">COMPSCI&#160;287</td><td>Advanced Robotics</td><td class="hourscol">3</td></tr>
<tr class="odd"><td class="codecol">COMPSCI&#160;288</td><td>Natural Language Processing</td><td class="hourscol">4</td></tr>
<tr class="even"><td class="codecol">COMPSCI&#160;289A</td><td>Introduction to Machine Learning</td><td class="hourscol">4</td></tr>
<tr class="odd areaheader"><td colspan="2"><span class="courselistcomment areaheader">Graphics/HCI</span></td><td class="hourscol"></td></tr>
<tr class="even"><td class="codecol">COMPSCI&#160;260B</td><td>Human-Computer Interaction Research</td><td class="hourscol">3</td></tr>
<tr class="odd areaheader"><td colspan="2"><span class="courselistcomment areaheader">Programming</span></td><td class="hourscol"></td></tr>
<tr class="even"><td class="codecol">COMPSCI&#160;263</td><td>Design of Programming Languages</td><td class="hourscol">3</td></tr>
<tr class="odd"><td class="codecol">COMPSCI&#160;264</td><td>Implementation of Programming Languages</td><td class="hourscol">4</td></tr>
<tr class="even"><td class="codecol">COMPSCI&#160;265</td><td>Compiler Optimization and Code Generation</td><td class="hourscol">3</td></tr>
<tr class="odd"><td class="codecol">COMPSCI&#160;C267</td><td>Applications of Parallel Computers</td><td class="hourscol">3</td></tr>
<tr class="even"><td class="codecol">EL&#160;ENG&#160;219C</td><td>Computer-Aided Verification</td><td class="hourscol">3</td></tr>
<tr class="odd areaheader"><td colspan="2"><span class="courselistcomment areaheader">Systems</span></td><td class="hourscol"></td></tr>
<tr class="even"><td class="codecol">COMPSCI&#160;261</td><td>Security in Computer Systems</td><td class="hourscol">3</td></tr>
<tr class="odd"><td class="codecol">COMPSCI&#160;261N</td><td>Internet and Network Security</td><td class="hourscol">4</td></tr>
<tr class="even"><td class="codecol">COMPSCI&#160;262A</td><td>Advanced Topics in Computer Systems</td><td class="hourscol">4</td></tr>
<tr class="odd"><td class="codecol">COMPSCI&#160;262B</td><td>Advanced Topics in Computer Systems</td><td class="hourscol">3</td></tr>
<tr class="even"><td class="codecol">COMPSCI&#160;268</td><td>Computer Networks</td><td class="hourscol">3</td></tr>
<tr class="odd"><td class="codecol">COMPSCI&#160;286B</td><td>Implementation of Data Base Systems</td><td class="hourscol">3</td></tr>
<tr class="even areaheader"><td colspan="2"><span class="courselistcomment areaheader">Architecture/VLSI</span></td><td class="hourscol"></td></tr>
<tr class="odd"><td class="codecol">COMPSCI&#160;250</td><td>VLSI Systems Design</td><td class="hourscol">4</td></tr>
<tr class="even lastrow"><td class="codecol">COMPSCI&#160;252</td><td>Graduate Computer Architecture</td><td class="hourscol">4</td></tr>
</tbody></table>

<table border="0" width="100%" class="sc_footnotes"><tr><td valign="top" class="symcol"><sup>1</sup></td><td class="notecol"><p><span class="sc_courseinline">COMPSCI&#160;260B</span>, <span class="sc_courseinline">COMPSCI&#160;263</span>, and <span class="sc_courseinline">EL&#160;ENG&#160;219C</span> cannot be used to fulfill this constraint, though they can be used to complete one of the three courses.</p></td></tr></table>
<h4>Qualifying Examination (QE)</h4>
<p>The QE is an important checkpoint meant to show that a student is on a promising research track toward the PhD degree. It is a University examination, administered by the Graduate Council, with the specific purpose of demonstrating that &quot;the student is clearly an expert in those areas of the discipline that have been specified for the examination, and that he or she can, in all likelihood, design and produce an acceptable dissertation.&quot; Despite such rigid criteria, faculty examiners recognize that the level of expertise expected is that appropriate for a third year graduate student who may be only in the early stages of a research project.</p>
<p>The EECS Department offers the qualifying exam in two formats: A or B. Students may choose the exam type of their choice after consultation with their adviser.</p>
<h6><strong>Format A</strong></h6>
<ol>
	<li>Students prepare a write-up and presentation summarizing a specific research area, preferably the one in which they intend to do their dissertation work. Their summary surveys that area and describes open and interesting research problems.</li>
	<li>They describe why they chose these problems and indicate what direction their research may take in the future.</li>
	<li>They prepare to display expertise on both the topic presented and on any related material that the committee thinks is relevant.</li>
	<li>The student should talk (at least briefly) about any research progress to date (e.g., MS project, PhD research, or class project). Some evidence of the ability to do research is expected.</li>
	<li>The committee shall evaluate students on the basis of their comprehension of the fundamental facts and principles that apply within their research area and the student’s ability to think incisively and critically about the theoretical and practical aspects of this field.</li>
	<li> Students must demonstrate command of the content and the ability to design and produce an acceptable dissertation.</li>
</ol>
<h6>Format B</h6>
<p>This option includes the presentation and defense of a thesis proposal in addition to the requirements of format A. It will include a summary of research to date and plans for future work (or at least the next stage thereof). The committee shall not only evaluate the student's thesis proposal and his/her progress to date, but shall also evaluate according to format A. As in format A, the student should prepare a single document and presentation, but in this case additional emphasis must be placed on research completed to date and plans for the remainder of the dissertation research.</p>
<h4>Thesis Proposal Defense</h4>
<p>Students not presenting a satisfactory thesis proposal defense, either because they took format A for the QE or because the material presented in an format B exam was not deemed a satisfactory proposal defense (although it may have sufficed to pass the QE), must write up and present a thesis proposal, which should include a summary of the research to date and plans for the remainder of the dissertation research. They should be prepared to discuss background and related areas, but the focus of the proposal should be on the progress made so far, and detailed plans for completing the thesis. The standard for continuing on with PhD research is that the proposal has sufficient merit to lead to a satisfactory dissertation. Another purpose of this presentation is for faculty to provide feedback on the quality of work to date. For this step, the committee should consist of at least three members from EECS familiar with the research area, preferably including those on the dissertation committee.</p>
<h3>Normative Time in Candidacy</h3>
<h4>Advancement to Candidacy</h4>
<p>Students must file the advancement form in the Graduate Office no later than the end of the semester following the one in which the qualifying exam was passed. In approving this application, Graduate Division approves the dissertation committee and will send a certificate of candidacy.</p>
<h4>Dissertation Talk</h4>
<p>As part of the requirements for the doctoral degree, students must give a public talk on the research covered by their dissertation. The dissertation talk is to be given a few months before the signing of the final submission of the dissertation. The talk should cover all the major components of the dissertation work in a substantial manner; in particular, the dissertation talk should not omit topics that will appear in the dissertation but are incomplete at the time of the talk.</p>
<p>The dissertation talk is to be attended by the whole dissertation committee, or, if this is not possible, by at least a majority of the members. Attendance at this talk is part of the committee's responsibility. It is, however, the responsibility of the student to schedule a time for the talk that is convenient for members of the committee.</p>
<h3>Required Professional Development</h3>
<h4>Graduate Student Instructor Teaching Requirement</h4>
<p>The department requires all PhD candidates to serve as graduate student instructors (GSIs) within the EECS department. The GSI teaching requirement not only helps to develop a student's communication skills, but it also makes a great contribution to the department's academic community. Students must fulfill this requirement by working as a GSI (excluding <span class="sc_courseinline">EL&#160;ENG&#160;375</span> or <span class="sc_courseinline">COMPSCI&#160;375</span>) for a total of 30 hours minimum prior to graduation. At least 20 of those hours must be for an EE or CS undergraduate course.</p>

]]>
</doctoraldegreerequirementstext>
<mastersdegreerequirementstext>
<![CDATA[
<h3>Unit requirements</h3>
<p>A minimum of 24 units is required.</p>
<h3>Curriculum</h3>
<p>All courses must be taken for a letter grade, except courses numbered  299s, which are only offered for <em>S/U</em> credit.</p>
<p>Students must maintain a minimum cumulative GPA of 3.0. No credit will be given for courses in which the student earns a grade of D+ or below.</p>
<p>Transfer credit may be awarded for a maximum of four semester or six quarter units of graduate coursework from another institution.</p>
<h6>Plan I</h6>
<table class="sc_courselist" width="100%"><colgroup><col class="codecol" /><col class="titlecol" /><col align="char" char="." class="hourscol" /></colgroup><tbody><tr class="even firstrow"><td colspan="2"><span class="courselistcomment">10 units of courses, selected from the 200-series (excluding 298 and 299) in EECS</span></td><td class="hourscol"></td></tr>
<tr class="odd"><td class="codecol">EL&#160;ENG&#160;299</td><td>Individual Research</td><td class="hourscol">4-10</td></tr>
<tr class="orclass odd"><td class="codecol orclass">or&#160;COMPSCI&#160;299</td><td colspan="2"> Individual Research</td></tr>
<tr class="even lastrow"><td colspan="2"><span class="courselistcomment">Upper division or graduate courses to reach the minimum of 24 units</span></td><td class="hourscol"></td></tr>
</tbody></table>

<h6>Plan II</h6>
<table class="sc_courselist" width="100%"><colgroup><col class="codecol" /><col class="titlecol" /><col align="char" char="." class="hourscol" /></colgroup><tbody><tr class="even firstrow"><td colspan="2"><span class="courselistcomment">10 units of courses, selected from the 200-series (excluding 298 and 299) in EECS</span></td><td class="hourscol"></td></tr>
<tr class="odd"><td class="codecol">EL&#160;ENG&#160;299</td><td>Individual Research</td><td class="hourscol">3-6</td></tr>
<tr class="orclass odd"><td class="codecol orclass">or&#160;COMPSCI&#160;299</td><td colspan="2"> Individual Research</td></tr>
<tr class="even lastrow"><td colspan="2"><span class="courselistcomment">Upper division or graduate courses to reach the minimum of 24 units</span></td><td class="hourscol"></td></tr>
</tbody></table>

<h3>Advancement to Candidacy</h3>
<p>For both Plan I and Plan II MS students, students need to complete the departmental Advance to Candidacy form, have their research adviser sign it, and submit the form to the department. Once a student is advanced to candidacy, candidacy is valid for three years.</p>
<h3>Capstone/Thesis (Plan I)</h3>
<p>Students planning to use Plan I for their MS Degree will need to follow the Graduate Division's “Thesis Filing Guidelines.&quot; They will also need to complete the Graduate Division Advance to Candidacy form and submit this to the department no later than the end of the second week of classes of their final semester.</p>
<h3>Capstone/Master's Project (Plan II)</h3>
<p>Students planning to use Plan II for their MS Degree will need to produce an MS Plan II Title/Signature Page. There is no special formatting required for the body of the Plan II MS report unlike the Plan I MS thesis which must follow strict Graduate Division guidelines.</p>
]]>
</mastersdegreerequirementstext>
<coursestext>
<![CDATA[
<h3>Computer Science</h3>
<div id="sc_sccoursedescs">
<div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI C249A" class="btn-course" role="button" aria-controls="534">
<span class="code">COMPSCI&#160;C249A</span> 
<span class="title">Introduction to Embedded Systems</span> 
<span class="hours">4 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Fall 2016, Fall 2015<br/>
This course introduces students to the basics of models, analysis tools, and control for embedded systems operating in real time. Students learn how to combine physical processes with computation. Topics include models of computation, control, analysis and verification, interfacing with the physical world, mapping to platforms, and distributed embedded systems. The course has a strong laboratory</span><span class="deschide"> component, with emphasis on a semester-long sequence of projects.
</span><br />
</p>
<div id="534" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Credit Restrictions:</strong> Students will receive no credit for El Eng/Comp Sci C249A after taking El Eng/Comp Sci C149.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 3 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Lee, Seshia</p><p><strong>Formerly known as:</strong> Electrical Engineering C249M/Computer Science C249M</p><p><strong>Also listed as:</strong> EL&#160;ENG&#160;C249A</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 250" class="btn-course" role="button" aria-controls="133">
<span class="code">COMPSCI&#160;250</span> 
<span class="title">VLSI Systems Design</span> 
<span class="hours">4 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2017, Spring 2016, Fall 2014<br/>
Unified top-down and bottom-up design of integrated circuits and systems concentrating on architectural and topological issues. VLSI architectures, systolic arrays, self-timed systems. Trends in VLSI development. Physical limits. Tradeoffs in custom-design, standard cells, gate arrays. VLSI design tools.
</span><br />
</p>
<div id="133" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 150</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 4 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Wawrzynek</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 252" class="btn-course" role="button" aria-controls="613">
<span class="code">COMPSCI&#160;252</span> 
<span class="title">Graduate Computer Architecture</span> 
<span class="hours">4 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2017, Fall 2015, Spring 2014<br/>
Graduate survey of contemporary computer organizations covering: early systems, CPU design, instruction sets, control, processors, busses, ALU, memory, I/O interfaces, connection networks, virtual memory, pipelined computers, multiprocessors, and case studies. Term paper or project is required.
</span><br />
</p>
<div id="613" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 152</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Culler, Kubiatowicz, Patterson</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 260A" class="btn-course" role="button" aria-controls="626">
<span class="code">COMPSCI&#160;260A</span> 
<span class="title">User Interface Design and Development</span> 
<span class="hours">4 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Spring 2017, Fall 2016<br/>
The design, implementation, and evaluation of user interfaces. User-centered design and task analysis. Conceptual models and interface metaphors. Usability inspection and evaluation methods. Analysis of user study data. Input methods (keyboard, pointing, touch, tangible) and input models. Visual design principles. Interface prototyping and implementation methodologies and tools. Students</span><span class="deschide"> will develop a user interface for a specific task and target user group in teams.
</span><br />
</p>
<div id="626" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 61B, 61BL, or consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Computer Science 260A after taking Computer Science 160.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Agrawala, Canny, Hartmann</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 260B" class="btn-course" role="button" aria-controls="852">
<span class="code">COMPSCI&#160;260B</span> 
<span class="title">Human-Computer Interaction Research</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2013<br/>
This course is a broad introduction to conducting research in Human-Computer Interaction. Students will become familiar with seminal and recent literature; learn to review and critique research papers; re-implement and evaluate important existing systems; and gain experience in conducting research. Topics include input devices, computer-supported cooperative work, crowdsourcing, design tools, evaluation methods</span><span class="deschide">, search and mobile interfaces, usable security, help and tutorial systems.
</span><br />
</p>
<div id="852" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 160 recommended, or consent of instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Hartmann</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 261" class="btn-course" role="button" aria-controls="491">
<span class="code">COMPSCI&#160;261</span> 
<span class="title">Security in Computer Systems</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2015, Fall 2013, Fall 2012<br/>
Graduate survey of modern topics in computer security, including protection, access control, distributed access security, firewalls, secure coding practices, safe languages, mobile code, and case studies from real-world systems. May also cover cryptographic protocols, privacy and anonymity, and/or other topics as time permits.
</span><br />
</p>
<div id="491" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 162</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> D. Song, Wagner</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 261N" class="btn-course" role="button" aria-controls="116">
<span class="code">COMPSCI&#160;261N</span> 
<span class="title">Internet and Network Security</span> 
<span class="hours">4 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Fall 2016, Spring 2015<br/>
Develops a thorough grounding in Internet and network security suitable for those interested in conducting research in the area or those more broadly interested in security or networking. Potential topics include denial-of-service; capabilities; network intrusion detection/prevention; worms; forensics; scanning; traffic analysis; legal issues; web attacks; anonymity; wireless and networked</span><span class="deschide"> devices; honeypots; botnets; scams; underground economy; attacker infrastructure; research pitfalls.
</span><br />
</p>
<div id="116" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Electrical Engineering 122 or equivalent; Computer Science 161 or familiarity with basic security concepts</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Paxson</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 262A" class="btn-course" role="button" aria-controls="364">
<span class="code">COMPSCI&#160;262A</span> 
<span class="title">Advanced Topics in Computer Systems</span> 
<span class="hours">4 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Fall 2016, Spring 2016<br/>
Graduate survey of systems for managing computation and information, covering a breadth of topics: early systems; volatile memory management, including virtual memory and buffer management; persistent memory systems, including both file systems and transactional storage managers; storage metadata, physical vs. logical naming, schemas, process scheduling, threading and concurrency control;</span><span class="deschide"> system support for networking, including remote procedure calls, transactional RPC, TCP, and active messages; security infrastructure; extensible systems and APIs; performance analysis and engineering of large software systems. Homework assignments, exam, and term paper or project required.
</span><br />
</p>
<div id="364" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 162 and entrance exam</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Brewer, Hellerstein</p><p><strong>Formerly known as:</strong> 262</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 262B" class="btn-course" role="button" aria-controls="611">
<span class="code">COMPSCI&#160;262B</span> 
<span class="title">Advanced Topics in Computer Systems</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2009, Fall 2008, Spring 2006<br/>
Continued graduate survey of large-scale systems for managing information and computation. Topics include basic performance measurement; extensibility, with attention to protection, security, and management of abstract data types; index structures, including support for concurrency and recovery; parallelism, including parallel architectures, query processing and scheduling; distributed</span><span class="deschide"> data management, including distributed and mobile file systems and databases; distributed caching; large-scale data analysis and search. Homework assignments, exam, and term paper or project required.
</span><br />
</p>
<div id="611" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 262A</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Brewer, Culler, Hellerstein, Joseph</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 263" class="btn-course" role="button" aria-controls="569">
<span class="code">COMPSCI&#160;263</span> 
<span class="title">Design of Programming Languages</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2014, Fall 2012, Spring 2012<br/>
Selected topics from: analysis, comparison, and design of programming languages, formal description of syntax and semantics, advanced programming techniques, structured programming, debugging, verification of programs and compilers, and proofs of correctness.
</span><br />
</p>
<div id="569" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 164</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Necula</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 264" class="btn-course" role="button" aria-controls="762">
<span class="code">COMPSCI&#160;264</span> 
<span class="title">Implementation of Programming Languages</span> 
<span class="hours">4 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2011, Spring 2010, Spring 2005<br/>
Compiler construction. Lexical analysis, syntax analysis. Semantic analysis code generation and optimization. Storage management. Run-time organization.
</span><br />
</p>
<div id="762" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 164, 263 recommended</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture, 1 hour of discussion, and 6 hours of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Bodik</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 265" class="btn-course" role="button" aria-controls="843">
<span class="code">COMPSCI&#160;265</span> 
<span class="title">Compiler Optimization and Code Generation</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2013, Fall 2009, Spring 2003<br/>
Table-driven and retargetable code generators. Register management. Flow analysis and global optimization methods. Code optimization for advanced languages and architectures. Local code improvement. Optimization by program transformation. Selected additional topics. A term paper or project is required.
</span><br />
</p>
<div id="843" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 164</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Sen</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI C267" class="btn-course" role="button" aria-controls="100">
<span class="code">COMPSCI&#160;C267</span> 
<span class="title">Applications of Parallel Computers</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2017, Spring 2016, Spring 2015<br/>
Models for parallel programming. Fundamental algorithms for linear algebra, sorting, FFT, etc. Survey of parallel machines and machine structures. Exiting parallel programming languages, vectorizing compilers, environments, libraries and toolboxes. Data partitioning techniques. Techniques for synchronization and load balancing. Detailed study and algorithm/program development of medium</span><span class="deschide"> sized applications.
</span><br />
</p>
<div id="100" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Repeat rules:</strong>  Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of laboratory per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Demmel, Yelick</p><p><strong>Also listed as:</strong> ENGIN&#160;C233</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 268" class="btn-course" role="button" aria-controls="7">
<span class="code">COMPSCI&#160;268</span> 
<span class="title">Computer Networks</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2016, Spring 2015, Spring 2014<br/>
Distributed systems, their notivations, applications, and organization. The network component. Network architectures. Local and long-haul networks, technologies, and topologies. Data link, network, and transport protocols. Point-to-point and broadcast networks. Routing and congestion control. Higher-level protocols. Naming. Internetworking. Examples and case studies.
</span><br />
</p>
<div id="7" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 162</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Joseph, Katz, Stoica</p><p><strong>Formerly known as:</strong> 292V</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 270" class="btn-course" role="button" aria-controls="243">
<span class="code">COMPSCI&#160;270</span> 
<span class="title">Combinatorial Algorithms and Data Structures</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow ">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2017, Spring 2016, Spring 2015<br/>
Design and analysis of efficient algorithms for combinatorial problems. Network flow theory, matching theory, matroid theory; augmenting-path algorithms; branch-and-bound algorithms; data structure techniques for efficient implementation of combinatorial algorithms; analysis of data structures; applications of data structure techniques to sorting, searching, and geometric problems.
</span><span class="deschide"></span><br />
</p>
<div id="243" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 170</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Papadimitriou, Rao, Sinclair, Vazirani</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 271" class="btn-course" role="button" aria-controls="826">
<span class="code">COMPSCI&#160;271</span> 
<span class="title">Randomness and Computation</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2011, Fall 2008, Fall 2005<br/>
Computational applications of randomness and computational theories of randomness. Approximate counting and uniform generation of combinatorial objects, rapid convergence of random walks on expander graphs, explicit construction of expander graphs, randomized reductions, Kolmogorov complexity, pseudo-random number generation, semi-random sources.
</span><br />
</p>
<div id="826" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 170 and at least one course numbered 270-279</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Sinclair</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 273" class="btn-course" role="button" aria-controls="892">
<span class="code">COMPSCI&#160;273</span> 
<span class="title">Foundations of Parallel Computation</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2012, Fall 2010, Spring 2009<br/>
. Fundamental theoretical issues in designing parallel algorithms and architectures. Shared memory models of parallel computation. Parallel algorithms for linear algegra, sorting, Fourier Transform, recurrence evaluation, and graph problems. Interconnection network based models. Algorithm design techniques for networks like hypercubes, shuffle-exchanges, threes, meshes and butterfly networks.</span><span class="deschide"> Systolic arrays and techniques for generating them. Message routing.
</span><br />
</p>
<div id="892" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 170, or consent of instructor</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Rao</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 274" class="btn-course" role="button" aria-controls="519">
<span class="code">COMPSCI&#160;274</span> 
<span class="title">Computational Geometry</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2017, Spring 2015, Spring 2013<br/>
. Constructive problems in computational geometry: convex hulls, triangulations, Voronoi diagrams, arrangements of hyperplanes; relationships among these problems. Search problems: advanced data structures; subdivision search; various kinds of range searches. Models of computation; lower bounds.
</span><br />
</p>
<div id="519" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 170 or equivalent</p><p><strong>Repeat rules:</strong> Course may be repeated for credit. Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Shewchuk</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 276" class="btn-course" role="button" aria-controls="122">
<span class="code">COMPSCI&#160;276</span> 
<span class="title">Cryptography</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Fall 2016, Fall 2015<br/>
Graduate survey of modern topics on theory, foundations, and applications of modern cryptography. One-way functions; pseudorandomness; encryption; authentication; public-key cryptosystems; notions of security. May also cover zero-knowledge proofs, multi-party cryptographic protocols, practical applications, and/or other topics, as time permits.
</span><br />
</p>
<div id="122" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 170</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Trevisan, Wagner</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI C280" class="btn-course" role="button" aria-controls="577">
<span class="code">COMPSCI&#160;C280</span> 
<span class="title">Computer Vision</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2017, Spring 2016, Spring 2015<br/>
Paradigms for computational vision. Relation to human visual perception. Mathematical techniques for representing and reasoning, with curves, surfaces and volumes. Illumination and reflectance models. Color perception. Image segmentation and aggregation. Methods for bottom-up three dimensional shape recovery: Line drawing analysis, stereo, shading, motion, texture. Use of object models</span><span class="deschide"> for prediction and recognition.
</span><br />
</p>
<div id="577" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Knowledge of linear algebra and calculus. Mathematics 1A-1B, 53, 54 or equivalent</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Malik</p><p><strong>Also listed as:</strong> VIS&#160;SCI&#160;C280</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI C281A" class="btn-course" role="button" aria-controls="812">
<span class="code">COMPSCI&#160;C281A</span> 
<span class="title">Statistical Learning Theory</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Fall 2016, Fall 2015<br/>
Classification regression, clustering, dimensionality, reduction, and density estimation. Mixture models, hierarchical models, factorial models, hidden Markov, and state space models, Markov properties, and recursive algorithms for general probabilistic inference nonparametric methods including decision trees, kernal methods, neural networks, and wavelets. Ensemble methods.
</span><br />
</p>
<div id="812" class="coursedetails" aria-expanded="false">


<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Bartlett, Jordan, Wainwright</p><p><strong>Also listed as:</strong> STAT&#160;C241A</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI C281B" class="btn-course" role="button" aria-controls="541">
<span class="code">COMPSCI&#160;C281B</span> 
<span class="title">Advanced Topics in Learning and Decision Making</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2017, Spring 2016, Spring 2014<br/>
Recent topics include: Graphical models and approximate inference algorithms. Markov chain Monte Carlo, mean field and probability propagation methods. Model selection and stochastic realization. Bayesian information theoretic and structural risk minimization approaches. Markov decision processes and partially observable Markov decision processes. Reinforcement learning.
</span><br />
</p>
<div id="541" class="coursedetails" aria-expanded="false">


<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Bartlett, Jordan, Wainwright</p><p><strong>Also listed as:</strong> STAT&#160;C241B</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 284A" class="btn-course" role="button" aria-controls="236">
<span class="code">COMPSCI&#160;284A</span> 
<span class="title">Foundations of Computer Graphics</span> 
<span class="hours">4 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Spring 2017, Fall 2016<br/>
Techniques of modeling objects for the purpose of computer rendering: boundary representations, constructive solids geometry, hierarchical scene descriptions. Mathematical techniques for curve and surface representation. Basic elements of a computer graphics rendering pipeline; architecture of modern graphics display devices. Geometrical transformations such as rotation, scaling, translation</span><span class="deschide">, and their matrix representations. Homogeneous coordinates, projective and perspective transformations.
</span><br />
</p>
<div id="236" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 61B or 61BL; programming skills in C, C++, or Java; linear algebra and calculus; or consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Computer Science 284A after taking 184.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Agrawala, Barsky, O'Brien, Ramamoorthi, Sequin</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 284B" class="btn-course" role="button" aria-controls="880">
<span class="code">COMPSCI&#160;284B</span> 
<span class="title">Advanced Computer Graphics Algorithms and Techniques</span> 
<span class="hours">4 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2017<br/>
This course provides a graduate-level introduction to advanced computer graphics algorithms and techniques. Students should already be familiar with basic concepts such as transformations, scan-conversion, scene graphs, shading, and light transport. Topics covered in this course include global illumination, mesh processing, subdivision surfaces, basic differential geometry, physically based animation, inverse</span><span class="deschide"> kinematics, imaging and computational photography, and precomputed light transport.
</span><br />
</p>
<div id="880" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> 184 or equivalent</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> O'Brien, Ramamoorthi</p><p><strong>Formerly known as:</strong> Computer Science 283</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 286A" class="btn-course" role="button" aria-controls="457">
<span class="code">COMPSCI&#160;286A</span> 
<span class="title">Introduction to Database Systems</span> 
<span class="hours">4 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Spring 2017, Fall 2016<br/>
Access methods and file systems to facilitate data access. Hierarchical, network, relational, and object-oriented data models. Query languages for models. Embedding query languages in programming languages. Database services including protection, integrity control, and alternative views of data. High-level interfaces including application generators, browsers, and report writers. Introduction</span><span class="deschide"> to transaction processing. Database system implementation to be done as term project.
</span><br />
</p>
<div id="457" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 61B and 61C</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for CS 286A after taking CS 186.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Franklin, Hellerstein</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 286B" class="btn-course" role="button" aria-controls="413">
<span class="code">COMPSCI&#160;286B</span> 
<span class="title">Implementation of Data Base Systems</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2014<br/>
Implementation of data base systems on modern hardware systems. Considerations concerning operating system design, including buffering, page size, prefetching, etc. Query processing algorithms, design of crash recovery and concurrency control systems. Implementation of distributed data bases and data base machines.
</span><br />
</p>
<div id="413" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 162 and 186 or 286A </p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Franklin, Hellerstein</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 287" class="btn-course" role="button" aria-controls="146">
<span class="code">COMPSCI&#160;287</span> 
<span class="title">Advanced Robotics</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2015, Spring 2015, Fall 2013<br/>
Advanced topics related to current research in algorithms and artificial intelligence for robotics. Planning, control, and estimation for realistic robot systems, taking into account: dynamic constraints, control and sensing uncertainty, and non-holonomic motion constraints.
</span><br />
</p>
<div id="146" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Instructor consent for undergraduate and masters students</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Abbeel</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 288" class="btn-course" role="button" aria-controls="96">
<span class="code">COMPSCI&#160;288</span> 
<span class="title">Natural Language Processing</span> 
<span class="hours">4 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2014, Spring 2013, Spring 2011<br/>
Methods and models for the analysis of natural (human) language data. Topics include: language modeling, speech recognition, linguistic analysis (syntactic parsing, semantic analysis, reference resolution, discourse modeling), machine translation, information extraction, question answering, and computational linguistics techniques.
</span><br />
</p>
<div id="96" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> CS188 required, CS170 recommended</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Klein</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 289A" class="btn-course" role="button" aria-controls="537">
<span class="code">COMPSCI&#160;289A</span> 
<span class="title">Introduction to Machine Learning</span> 
<span class="hours">4 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Spring 2017, Fall 2016<br/>
This course provides an introduction to theoretical foundations, algorithms, and methodologies for machine learning, emphasizing the role of probability and optimization and exploring a variety of real-world applications. Students are expected to have a solid foundation in calculus and linear algebra as well as exposure to the basic tools of logic and probability, and should be familiar</span><span class="deschide"> with at least one modern, high-level programming language.
</span><br />
</p>
<div id="537" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Mathematics 53, 54; Computer Science 70; Computer Science 188 or consent of instructor</p><p><strong>Credit Restrictions:</strong> Students will receive no credit for Comp Sci 289A after taking Comp Sci 189.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 3 hours of lecture and 1 hour of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructors:</strong> Abbeel, Bartlett, Darrell, El Ghaoui, Jordan, Klein, Malik, Russell</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 294" class="btn-course" role="button" aria-controls="171">
<span class="code">COMPSCI&#160;294</span> 
<span class="title">Special Topics</span> 
<span class="hours">1 - 4 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Spring 2017, Fall 2016<br/>
Topics will vary from semester to semester. See Computer Science Division announcements.
</span><br />
</p>
<div id="171" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Repeat rules:</strong> Course may be repeated for credit. Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> <br /><span style="width: 15px; display: inline-block;"></span>4 weeks - 3-15 hours of lecture per week<br /><span style="width: 15px; display: inline-block;"></span>6 weeks - 3-9 hours of lecture per week<br /><span style="width: 15px; display: inline-block;"></span>8 weeks - 2-6 hours of lecture per week<br /><span style="width: 15px; display: inline-block;"></span>10 weeks - 2-5 hours of lecture per week<br /><span style="width: 15px; display: inline-block;"></span>15 weeks - 1-3 hours of lecture per week</p><!--<p class=""><strong>Additional Format:</strong> One to three hours of lecture per week for standard offering. In some instances, condensed special topics classes running from 2-10 weeks may also be offered usually to accommodate guest instructors. Total works hours will remain the same but more work in a given week will be required.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Letter grade. </p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 297" class="btn-course" role="button" aria-controls="44">
<span class="code">COMPSCI&#160;297</span> 
<span class="title">Field Studies in Computer Science</span> 
<span class="hours">12.0 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Summer 2017 8 Week Session, Summer 2017 First 6 Week Session<br/>
Supervised experience in off-campus companies relevant to specific aspects and applications of electrical engineering and/or computer science. Written report required at the end of the semester.
</span><br />
</p>
<div id="44" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Repeat rules:</strong> Course may be repeated for credit. Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-12 hours of independent study per week</p><p><strong>Summer:</strong> <br /><span style="width: 15px; display: inline-block;"></span>6 weeks - 2.5-30 hours of independent study per week<br /><span style="width: 15px; display: inline-block;"></span>8 weeks - 1.5-22.5 hours of independent study per week<br /><span style="width: 15px; display: inline-block;"></span>10 weeks - 1.5-18 hours of independent study per week</p><!--<p class=""><strong>Additional Format:</strong> Independent study. Independent study.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Offered for satisfactory/unsatisfactory grade only. </p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 298" class="btn-course" role="button" aria-controls="683">
<span class="code">COMPSCI&#160;298</span> 
<span class="title">Group Studies Seminars, or Group Research</span> 
<span class="hours">1 - 4 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Spring 2017, Fall 2016<br/>
Advanced study in various subjects through seminars on topics to be selected each year, informal group studies of special problems, group participation in comprehensive design problems, or group research on complete problems for analysis and experimentation.
</span><br />
</p>
<div id="683" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Repeat rules:</strong> Course may be repeated for credit. Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-4 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> The grading option will be decided by the instructor when the class is offered. </p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 299" class="btn-course" role="button" aria-controls="278">
<span class="code">COMPSCI&#160;299</span> 
<span class="title">Individual Research</span> 
<span class="hours">1 - 12 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Summer 2017 8 Week Session, Summer 2017 Second 6 Week Session<br/>
Investigations of problems in computer science.
</span><br />
</p>
<div id="278" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Repeat rules:</strong> Course may be repeated for credit. Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 0-1 hours of independent study per week</p><p><strong>Summer:</strong> <br /><span style="width: 15px; display: inline-block;"></span>6 weeks - 8-30 hours of independent study per week<br /><span style="width: 15px; display: inline-block;"></span>8 weeks - 6-22.5 hours of independent study per week<br /><span style="width: 15px; display: inline-block;"></span>10 weeks - 1.5-18 hours of independent study per week</p><!--<p class=""><strong>Additional Format:</strong> Independent study. Forty-five hours of work per unit per term.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate</p><p><strong>Grading:</strong> Offered for satisfactory/unsatisfactory grade only. </p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 300" class="btn-course" role="button" aria-controls="172">
<span class="code">COMPSCI&#160;300</span> 
<span class="title">Teaching Practice</span> 
<span class="hours">1 - 6 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Summer 2016 8 Week Session, Summer 2015 8 Week Session, Summer 2014 8 Week Session<br/>
Supervised teaching practice, in either a one-on-one tutorial or classroom discussion setting.
</span><br />
</p>
<div id="172" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Repeat rules:</strong> Course may be repeated for credit. Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 0 hours of independent study per week</p><p><strong>Summer:</strong> <br /><span style="width: 15px; display: inline-block;"></span>6 weeks - 1-5 hours of independent study per week<br /><span style="width: 15px; display: inline-block;"></span>8 weeks - 1-4 hours of independent study per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Professional course for teachers or prospective teachers</p><p><strong>Grading:</strong> Offered for satisfactory/unsatisfactory grade only. </p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 302" class="btn-course" role="button" aria-controls="941">
<span class="code">COMPSCI&#160;302</span> 
<span class="title">Designing Computer Science Education</span> 
<span class="hours">3 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow overflow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Spring 2014, Spring 2012, Spring 2011<br/>
Discussion and review of research and practice relating to the teaching of computer science: knowledge organization and misconceptions, curriculum and topic organization, evaluation, collaborative learning, technology use, and administrative issues. As part of a semester-long project to design a computer science course, participants invent and refine a variety of homework and exam activities</span><span class="deschide">, and evaluate alternatives for textbooks, grading and other administrative policies, and innovative uses of technology.
</span><br />
</p>
<div id="941" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Computer Science 301 and two semesters of GSI experience</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 2 hours of lecture per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Professional course for teachers or prospective teachers</p><p><strong>Grading:</strong> Letter grade. </p><p><strong>Instructor:</strong> Garcia</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 375" class="btn-course" role="button" aria-controls="760">
<span class="code">COMPSCI&#160;375</span> 
<span class="title">Teaching Techniques for Computer Science</span> 
<span class="hours">2 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Spring 2017, Fall 2016<br/>
Discussion and practice of techniques for effective teaching, focusing on issues most relevant to teaching assistants in computer science courses.
</span><br />
</p>
<div id="760" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Consent of instructor</p><p><strong>Repeat rules:</strong> Course may be repeated for credit. Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 10 weeks - 3 hours of discussion per week</p><p><strong>Summer:</strong> 8 weeks - 4 hours of discussion per week</p></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Professional course for teachers or prospective teachers</p><p><strong>Grading:</strong> Offered for satisfactory/unsatisfactory grade only. </p><p><strong>Instructors:</strong> Barsky, Garcia, Harvey</p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 399" class="btn-course" role="button" aria-controls="164">
<span class="code">COMPSCI&#160;399</span> 
<span class="title">Professional Preparation: Supervised Teaching of Computer Science</span> 
<span class="hours">1 or 2 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Summer 2017 8 Week Session, Spring 2017<br/>
Discussion, problem review and development, guidance of computer science laboratory sections, course development, supervised practice teaching.
</span><br />
</p>
<div id="164" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Prerequisites:</strong> Appointment as graduate student instructor</p><p><strong>Repeat rules:</strong> Course may be repeated for credit. Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 1-2 hours of independent study per week</p><p><strong>Summer:</strong> 8 weeks - 1-2 hours of independent study per week</p><!--<p class=""><strong>Additional Format:</strong> One hour of meeting with instructor plus 10 hours (1 unit) or 20 hours(2 units) of teaching per week. One hour of meeting with instructor plus 20 hours (1 unit) or 40 hours (2 units) of teaching per week.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Professional course for teachers or prospective teachers</p><p><strong>Grading:</strong> Offered for satisfactory/unsatisfactory grade only. </p></div>
</div>
</div>
</div><div class="courseblock">
<p class="courseblocktitle">
<a href="/search/?P=COMPSCI 602" class="btn-course" role="button" aria-controls="205">
<span class="code">COMPSCI&#160;602</span> 
<span class="title">Individual Study for Doctoral Students</span> 
<span class="hours">1 - 8 Units</span>
</a>
</p>
<div class="coursebody">

<p class="courseblockdesc"><span class="descshow">Offered through: Electrical Engin and Computer Sci<br/>
Terms offered: Fall 2017, Fall 2016, Summer 2016 8 Week Session<br/>
Individual study in consultation with the major field adviser, intended to provide an opportunity for qualified students to prepare themselves for the various examinations required of candidates for the Ph.D. (and other doctoral degrees).
</span><br />
</p>
<div id="205" class="coursedetails" aria-expanded="false">

<div class="course-section"><p class="course-heading"><strong>Rules &amp; Requirements</strong></p><p><strong>Credit Restrictions:</strong> Course does not satisfy unit or residence requirements for doctoral degree.</p><p><strong>Repeat rules:</strong> Course may be repeated for credit. Course may be repeated for credit when topic changes.</p></div>
<div class="course-section"><p class="course-heading"><strong>Hours &amp; Format</strong></p><p><strong>Fall and/or spring:</strong> 15 weeks - 0 hours of independent study per week</p><p><strong>Summer:</strong> 8 weeks - 6-45 hours of independent study per week</p><!--<p class=""><strong>Additional Format:</strong> Forty-five hours of work per unit per term. Independent study, consultation with faculty member.</p>--></div>
<div class="course-section"><p class="course-heading"><strong>Additional Details</strong></p><p><strong>Subject/Course Level:</strong> Computer Science/Graduate examination preparation</p><p><strong>Grading:</strong> Offered for satisfactory/unsatisfactory grade only. </p></div>
</div>
</div>
</div></div>
]]>
</coursestext>
<faculty>
<![CDATA[
]]>
</faculty>
</courseleaf>

